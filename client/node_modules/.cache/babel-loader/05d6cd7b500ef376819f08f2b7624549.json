{"ast":null,"code":"import _objectSpread from \"/Users/carloscarrasquillo/Documents/Documents/other/my_website/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/carloscarrasquillo/Documents/Documents/other/my_website/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/carloscarrasquillo/Documents/Documents/other/my_website/client/src/components/ContactMe/ContactForm.js\";\nimport React, { Component } from \"react\";\nimport \"./ContactForm.css\";\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = (_ref) => {\n  let formErrors = _ref.formErrors,\n      rest = _objectWithoutProperties(_ref, [\"formErrors\"]);\n\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        console.log(`--SUBMITTING--\n          First Name: ${this.state.firstName}\n          Last Name: ${this.state.lastName}\n          Email: ${this.state.email}\n          Password: ${this.state.password}\n        `);\n      } else {\n        console.error(\"Invalid Form\");\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n\n      let formErrors = _objectSpread({}, this.state.formErrors);\n\n      switch (name) {\n        case \"firstName\":\n          formErrors.firstName = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"lastName\":\n          formErrors.lastName = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n          break;\n\n        case \"password\":\n          formErrors.password = value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      firstName: null,\n      lastName: null,\n      email: null,\n      password: null,\n      formErrors: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\"\n      }\n    };\n  }\n\n  render() {\n    const formErrors = this.state.formErrors;\n    return React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Email Me\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"input\", {\n      className: formErrors.firstName.length > 0 ? \"error\" : null,\n      placeholder: \"First Name\",\n      type: \"text\",\n      name: \"firstName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), formErrors.firstName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, formErrors.firstName)), React.createElement(\"div\", {\n      className: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"input\", {\n      className: formErrors.lastName.length > 0 ? \"error\" : null,\n      placeholder: \"Last Name\",\n      type: \"text\",\n      name: \"lastName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), formErrors.lastName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, formErrors.lastName)), React.createElement(\"div\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, formErrors.email)), React.createElement(\"div\", {\n      className: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      className: formErrors.password.length > 0 ? \"error\" : null,\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), formErrors.password.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, formErrors.password)), React.createElement(\"div\", {\n      className: \"createAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/carloscarrasquillo/Documents/Documents/other/my_website/client/src/components/ContactMe/ContactForm.js"],"names":["React","Component","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","App","constructor","props","handleSubmit","e","preventDefault","state","console","log","firstName","lastName","email","password","error","handleChange","target","name","value","test","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./ContactForm.css\";\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({ formErrors, ...rest }) => {\n    let valid = true;\n\n    // validate form errors being empty\n    Object.values(formErrors).forEach(val => {\n      val.length > 0 && (valid = false);\n    });\n\n    // validate the form was filled out\n    Object.values(rest).forEach(val => {\n      val === null && (valid = false);\n    });\n\n    return valid;\n};\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  firstName:  null,\n                        lastName:   null,\n                        email:      null,\n                        password:   null,\n                        formErrors: { firstName: \"\", lastName: \"\", email: \"\", password: \"\" }\n                     };\n    }\n\n  handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        console.log(`--SUBMITTING--\n          First Name: ${this.state.firstName}\n          Last Name: ${this.state.lastName}\n          Email: ${this.state.email}\n          Password: ${this.state.password}\n        `);\n      } else {\n        console.error(\"Invalid Form\");\n      }\n  };\n\n  handleChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case \"firstName\":\n        formErrors.firstName =\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n        break;\n      case \"lastName\":\n        formErrors.lastName =\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n        break;\n      case \"email\":\n        formErrors.email = emailRegex.test(value)\n          ? \"\"\n          : \"invalid email address\";\n        break;\n      case \"password\":\n        formErrors.password =\n          value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n  };\n\n  render() {\n    const { formErrors } = this.state;\n\n    return (\n        <div className=\"form-wrapper\">\n          <h1>Email Me</h1>\n          <form onSubmit={this.handleSubmit} noValidate>\n            <div className=\"firstName\">\n              <label htmlFor=\"firstName\">First Name</label>\n              <input\n                className={formErrors.firstName.length > 0 ? \"error\" : null}\n                placeholder=\"First Name\"\n                type=\"text\"\n                name=\"firstName\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.firstName.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.firstName}</span>\n              )}\n            </div>\n            <div className=\"lastName\">\n              <label htmlFor=\"lastName\">Last Name</label>\n              <input\n                className={formErrors.lastName.length > 0 ? \"error\" : null}\n                placeholder=\"Last Name\"\n                type=\"text\"\n                name=\"lastName\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.lastName.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.lastName}</span>\n              )}\n            </div>\n            <div className=\"email\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                className={formErrors.email.length > 0 ? \"error\" : null}\n                placeholder=\"Email\"\n                type=\"email\"\n                name=\"email\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.email.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.email}</span>\n              )}\n            </div>\n            <div className=\"password\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                className={formErrors.password.length > 0 ? \"error\" : null}\n                placeholder=\"Password\"\n                type=\"password\"\n                name=\"password\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.password.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.password}</span>\n              )}\n            </div>\n            <div className=\"createAccount\">\n              <button type=\"submit\">Submit</button>\n            </div>\n          </form>\n        </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}